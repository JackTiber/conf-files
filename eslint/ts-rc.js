module.exports = {
  env: {
    browser: true,
    node: true,
  },
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    sourceType: 'module',
  },
  plugins: ['@typescript-eslint', 'sort-imports-es6-autofix'],
  extends: ['some-other-config-you-use', 'prettier'],
  rules: {
    '@typescript-eslint/array-type': 'off',
    '@typescript-eslint/await-thenable': 'error',
    '@typescript-eslint/class-name-casing': 'error',
    '@typescript-eslint/consistent-type-assertions': 'error',
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/member-delimiter-style': [
      'error',
      {
        multiline: {
          delimiter: 'semi',
          requireLast: true,
        },
        singleline: {
          delimiter: 'semi',
          requireLast: false,
        },
      },
    ],
    '@typescript-eslint/member-ordering': 'error',
    '@typescript-eslint/no-empty-function': 'error',
    '@typescript-eslint/no-empty-interface': 'error',
    '@typescript-eslint/no-explicit-any': 'warn',
    '@typescript-eslint/no-extraneous-class': 'error',
    '@typescript-eslint/no-floating-promises': 'error',
    '@typescript-eslint/no-for-in-array': 'error',
    '@typescript-eslint/no-misused-new': 'error',
    '@typescript-eslint/no-non-null-assertion': 'error',
    '@typescript-eslint/no-param-reassign': 'off',
    '@typescript-eslint/no-require-imports': 'error',
    '@typescript-eslint/no-this-alias': 'error',
    '@typescript-eslint/no-unnecessary-qualifier': 'error',
    '@typescript-eslint/no-unnecessary-type-assertion': 'error',
    '@typescript-eslint/no-use-before-define': 'off',
    '@typescript-eslint/no-var-requires': 'error',
    '@typescript-eslint/prefer-for-of': 'off',
    '@typescript-eslint/prefer-namespace-keyword': 'error',
    '@typescript-eslint/promise-function-async': 'error',
    '@typescript-eslint/quotes': ['off', 'double'],
    '@typescript-eslint/restrict-plus-operands': 'off',
    '@typescript-eslint/semi': ['error', 'always'],
    '@typescript-eslint/triple-slash-reference': 'error',
    '@typescript-eslint/unbound-method': 'warn',
    'array-bracket-spacing': 'error',
    'arrow-body-style': 'error',
    'arrow-parens': ['error', 'always'],
    'arrow-spacing': ['warn', { before: true, after: true }],
    'block-spacing': 'error',
    camelcase: 'off',
    'class-methods-use-this': 'off',
    complexity: 'error',
    'constructor-super': 'error',
    curly: 'error',
    'default-case': 'warn',
    'dot-notation': 'error',
    'eol-last': 'error',
    eqeqeq: ['error', 'always'],
    'id-blacklist': 'off',
    'id-match': 'off',
    'key-spacing': { afterColon: true },
    'keyword-spacing': { before: true, after: true },
    'linebreak-style': ['error', 'windows'],
    'max-classes-per-file': ['error', 1],
    'max-len': [
      'error',
      {
        code: 300,
      },
    ],
    'max-lines': ['error', 200],
    'no-bitwise': 'error',
    'no-caller': 'error',
    'no-cond-assign': 'error',
    'no-const-assign': 'error',
    'no-console': 'off',
    'no-debugger': 'error',
    'no-dupe-else-if': 'error',
    'no-dupe-args': 'error',
    'no-duplicate-case': 'error',
    'no-duplicate-imports': 'error',
    'no-extra-semi': 'warn',
    'no-empty': 'error',
    'no-eval': 'error',
    'no-fallthrough': 'error',
    'no-invalid-this': 'warn',
    'no-irregular-whitespace': 'error',
    'no-mixed-spaces-and-tabs': 'error',
    'no-multiple-empty-lines': 'error',
    'no-new-wrappers': 'error',
    'no-redeclare': 'error',
    'no-return-await': 'error',
    'no-sequences': 'error',
    'no-shadow': [
      'error',
      {
        hoist: 'all',
      },
    ],
    'no-sparse-arrays': 'error',
    'no-template-curly-in-string': 'error',
    'no-throw-literal': 'error',
    'no-trailing-spaces': 'error',
    'no-undef-init': 'error',
    'no-underscore-dangle': 'off',
    'no-unneeded-ternary': 'error',
    'no-unsafe-finally': 'error',
    'no-unused-expressions': 'error',
    'no-useless-return': 'error',
    'no-var': 'error',
    'no-void': 'off',
    'object-curly-spacing': 'always',
    'object-shorthand': 'error',
    'one-var': ['off', 'never'],
    'padding-line-between-statements': [
      'error',
      {
        blankLine: 'always',
        prev: '*',
        next: 'return',
      },
    ],
    'prefer-const': 'error',
    'prefer-destructuring': ['error', { object: true, array: true }],
    'prefer-object-spread': 'error',
    'prefer-template': 'error',
    'quote-props': ['error', 'consistent-as-needed'],
    radix: 'error',
    'rest-spread-spacing': ['error', 'always'],
    'sort-imports': [
      2,
      {
        ignoreCase: false,
        ignoreMemberSort: false,
        memberSyntaxSortOrder: ['none', 'all', 'multiple', 'single'],
      },
    ],
    'sort-vars': 'error',
    'space-before-blocks': 'always',
    'spaced-comment': 'error',
    'space-in-parens': ['error', 'always'],
    'use-isnan': 'error',
    yoda: 'error',
  },
};
